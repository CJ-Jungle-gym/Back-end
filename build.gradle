//plugins {
//    id 'java'
//    id 'org.springframework.boot' version '3.4.2'
//    id 'io.spring.dependency-management' version '1.1.7'
//}
//
//group = 'com.example'
//version = '0.0.1-SNAPSHOT'
//
//java {
//    toolchain {
//        languageVersion = JavaLanguageVersion.of(17)
//    }
//}
//sourceCompatibility = '17'
//
//repositories {
//    mavenCentral()
//}
//
//dependencies {
//    // Spring Boot Core
//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-validation'
//
//    // Database
//    runtimeOnly 'com.h2database:h2' // 개발용 H2
//    implementation 'mysql:mysql-connector-java' // 배포용
//
//    // Lombok (코드 간소화)
//    implementation 'org.projectlombok:lombok'
//    annotationProcessor 'org.projectlombok:lombok'
//
//    // API 문서화 (Swagger)
//    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
//
//    // Test
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.junit.jupiter:junit-jupiter'
//
//    // Actuator (모니터링)
//    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//
//    // 나중에 암호화 추가시 사용
//    // Spring Security (JWT 포함)
////    implementation 'org.springframework.boot:spring-boot-starter-security'
////
////
////    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
////    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
////    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
//
//
//}
//
//tasks.named('test') {
//    useJUnitPlatform()
//}


plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
sourceCompatibility = '17'

repositories {
    mavenCentral()  // Maven Central 리포지토리 추가
}

dependencies {
    // Spring Boot Core
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Database
    runtimeOnly 'com.h2database:h2' // 개발용 H2
//    implementation 'mysql:mysql-connector-java:8.0.32' // MySQL 커넥터 드라이버
    implementation 'com.mysql:mysql-connector-j:8.0.32'
    // Hibernate 6.x 의존성 (Spring Boot 3.x와 호환)
    implementation 'org.hibernate:hibernate-core:6.0.0.Final'  // Hibernate 6.x 사용

    // Lombok (코드 간소화)
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // API 문서화 (Swagger)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // Actuator (모니터링)
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

tasks.named('test') {
    useJUnitPlatform()  // JUnit Platform 사용
}


